Python Plotting and Analysis Files, and What They Do:
Last edit 10/24/2012, 9/22/13 by Tycho Sleator
-------------------------------------------------------------------------------
analyze_plot_ispin_echo_sweep_data.py

This file reads in a sequence of spincore ".txt" files generated by the program
"hahn_echo_sweep", and extracts the size of the echo from each of those files 
and plots the result.  The echo size is determined by integrating the absolute 
value of the signal over a region of the echo.  

This file is derived from the file 'manipulate_plot_ispin_nmr_data.py'.
(which was previously updated:  2/20/2012 by Tycho Sleator)

Last update:  9/26/2012 at 12:08 am by Tycho Sleator

-------------------------------------------------------------------------------
ispin_nmr_cpmg_analysis.py:

Last updates: 9/22/2013 by Tycho Sleator

Program to plot and analyze CPMG data, in which just a few points (n) are 
taken from the top of each echo.  The data are generated in the Spincore 
LabView interface from the specification of the number of points per echo, n.  
At the beginning of the FID, and in the middle of each echo, n points are 
collected at the rate given by the parameter 'SW' in the LabVeiw interface, 
(or 'bw' in this program).  The n points from each echo are averaged, and the
average is plotted as a function of the time of the given echo.  The data are
fit to a decaying exponential, from which the value of T2 can be extracted.  

-------------------------------------------------------------------------------
ispin_nmr_T1_analysis.py:
    
Last updates:  2/21/2012, 10/6/2012, 10/24/2012 by Tycho Sleator

This program determines T1 from a set of spincore ".txt" files, generated by
running the spincore batch file called 'T1_IR_sweep.bat'.  Each ".txt" file 
contains the data from an "inversion recovery" sequence, where a pi pulse 
inverts the signal, and after a variable delay "tau", a pi/2 pulse is applied 
and the resulting free-induction decay (fid) is recorded.  The data in the files 
differ only in the value of tau.  Fitting the size of the fid as a function of 
tau to an exponential decay allows one to extract the spin-lattice relaxation 
time T1.

More specifically, this program:
- plots the data from each of the ".txt" data files.
- Integrates over the resonance line in the complex frequency spectrum to get the 
  'size' of the signal for each value of tau.
- For each value of tau, rotates the integrated signal onto the real axis.
- Fits the signal size as a function of tau to a decaying exponential and prints
  the fit parameters (including value of T1), and plots both the data and fit. 

-------------------------------------------------------------------------------
manipulate_plot_ispin_nmr_data.py

This routine reads in a spincore ".txt" file, and plots the data as well as the
fft of the data in that file

Last update:  2/20/2012, 10/7/2012 by Tycho Sleator

-------------------------------------------------------------------------------
NMR_diffusion_fit_array.py

This routine to uses the Levenburg-Marquardt algorithm to fit a set of data 
points to the function A*np.exp(-((gamma*t)**3)/6) + y0, which describes the 
amplitude of a Hahn echo in the presence of a magnetic field gradient and 
diffusion.  From the fit, one can determine the constant of self diffusion.
The Hahn echo amplitudes as a function of delays (tau) are obtained from a
pair of arrays pasted into the program.
Formerly called NMR_diffusion_fit_sec

Last Update 9/29/2012, 10/7/2012 at 12:31 pm by Tycho Sleator 

-------------------------------------------------------------------------------
NMR_diffusion_fit_csv.py

This routine to uses the Levenburg-Marquardt algorithm to fit a set of data 
points in a .csv file to the function A*np.exp(-(alpha*(t**3)) + y0, which 
describes the amplitude of a Hahn echo in the presence of a magnetic field 
gradient and diffusion.  From the fit, one can determine the constant of self 
diffusion.

Last Update 10/02/2012 at 5:18pm by Tycho Sleator 

-------------------------------------------------------------------------------
plot_ispin_data_sequence.py

This routine reads in and plots a sequence of spincore '.txt' files.  The plots 
are saved to disk with filename 'xxx.pdf', where 'xxx.txt' is the file name 
containing the data.  Derived from the program plot_ispin_forloop, written by 
Greg Lemberskiy.  

Last update:  1/30/2012, 10/7/2012 by Tycho Sleator

-------------------------------------------------------------------------------
plot_ispin_nmr_data_FFT.py

This routine reads in a spincore ".txt" file, and plots the time data 
in that file as well as the frequency data (FFT).  Since the interesting
part of the data is at low frequencies, the frequency range of the plot is
reduced by a scale factor 'sf'. 
  
Last update:  9/25/2012, 10/07/2012 by Tycho Sleator

-------------------------------------------------------------------------------
plot_ispin_nmr_data_pow.py or plot_ispin_nmr_data_old.py

This routine reads in a spincore ".txt" file, and plots the data in that file.
The data are rescaled so the maximum value is between 0.1 and 1.0.  The y-axis 
label is modified to reflect this change in scale.  

This rescaling can lead to problems if more than one file is plotted on the 
same graph.  

Last update:  1/30/2012 by Tycho Sleator

-------------------------------------------------------------------------------
plot_ispin_nmr_data.py

This routine reads in a spincore ".txt" file, and plots the data in that file
Unlike the file 'plot_ispin_nmr_data_old.py' it doesn't automatically rescale the
data to fit between 0 and 1.  This has an advantage when plotting several data
sets on the same plot.  
Last update:  9/25/2012 by Tycho Sleator

